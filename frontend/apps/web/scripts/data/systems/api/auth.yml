system: API
subsystem: Auth
features:
  - name: API Auth Verify
    behaviors:
      - id: API_AUTH_VERIFY_001
        description: |
          Given a JWT token,
          verify the token and return a list of permissions associated with the specified token
  
  - name: API Auth New
    behaviors:
      - id: API_AUTH_NEW_001
        description: |
          Given a list of permissions and the user is admin, 
          return a new JWT token with specified permissions
      - id: API_AUTH_NEW_002
        description: |
          Given that the user is not admin,
          return an error

  - name: Authorize
    behaviors:
      - id: API_AUTH_AUTHORIZE_001
        description: |
          Given an non admin JWT token and API method annotated as perm:admin,
          return a 403 Forbidden response

  - name: Permissioned Full
    behaviors:
      - id: API_AUTH_PERMISSIONED_FULL_001
        description: |
          Given a Full Node instance,
          return a "permissioned" API wrapping all methods on the given node with JWT-based authentication
      - id: API_AUTH_PERMISSIONED_FULL_002
        description: |
          Given a permissioned Full Node,
          all API calls should check the user permissions from the JWT token,
          and return an error if the user doesn't have adequate permissions.
          HINT: permissions in lotus should respect the //perm:* struct tags
  
  - name: Permissioned Storage
    behaviors:
      - id: API_AUTH_PERMISSIONED_STORAGE_001
        description: |
          Given a Storage Provider Node instance,
          return a "permissioned" API wrapping all methods on the given node.
      - id: API_AUTH_PERMISSIONED_STORAGE_002
        description: |
          Given a permissioned Storage Provider Node,
          all API calls should check the user permissions from the JWT token,
          and return an error if the user doesn't have adequate permissions.
          HINT: permissions in lotus should respect the //perm:* struct tags

  - name: Permissioned Worker
    behaviors:
      - id: API_AUTH_PERMISSIONED_WORKER_001
        description: |
          Given a WORKER Node instance,
          return a "permissioned" API wrapping all methods on the given node.
      - id: API_AUTH_PERMISSIONED_WORKER_002
        description: |
          Given a permissioned WORKER Node,
          all API calls should check the user permissions from the JWT token,
          and return an error if the user doesn't have adequate permissions.
          HINT: permissions in lotus should respect the //perm:* struct tags

  - name: Permissioned Wallet
    behaviors:
      - id: API_AUTH_PERMISSIONED_WALLET_001
        description: |
          Given a WALLET Node instance,
          return a "permissioned" API wrapping all methods on the given node.
      - id: API_AUTH_PERMISSIONED_WALLET_002
        description: |
          Given a permissioned WALLET Node,
          all API calls should check the user permissions from the JWT token,
          and return an error if the user doesn't have adequate permissions.
          HINT: permissions in lotus should respect the //perm:* struct tags