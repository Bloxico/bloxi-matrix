system: Chain
subsystem: Beacon
features:
  - name: Get beacon for epoch
    behaviors:
      - id: BLOCKCHAIN_BEACON_GET_BEACON_FOR_EPOCH_01
        description: |
          Given a beacon schedule, chain epoch, 
          returns the beacon used to generate randomness in the epoch.
          The beacon is found by searching through the list of
          used beacons, starting from the most recent one
  
  - name: Validate block values
    behaviors: 
      - id: BLOCKCHAIN_BEACON_VALIDATE_BLOCK_VALUES_01
        description: |
          Given a beacon schedule, a block header 'h', a parent epoch, and
          a previous beacon entry 'prev',
          validates the beacon for the parent epoch, returning an error
          if validation fails.
      - id: BLOCKCHAIN_BEACON_VALIDATE_BLOCK_VALUES_02
        description: |
          Given that parent and beacon for header's epoch are different,
          return error if number of beacons at header's epoch is not equal to 2
      - id: BLOCKCHAIN_BEACON_VALIDATE_BLOCK_VALUES_03
        description: |
          Given that parent and beacon for header's epoch are different,
          return error if the two beacon entries cannot be validated
      - id: BLOCKCHAIN_BEACON_VALIDATE_BLOCK_VALUES_04
        description: |
          Given that 'prev' round and the max beacon round for 'h'
          epoch are the same, return error if the header has beacon entries present
      - id: BLOCKCHAIN_BEACON_VALIDATE_BLOCK_VALUES_05
        description: |
          Given that 'prev' round and the max beacon round for 'h' are different,
          return error if header does not have any beacon entries
      - id: BLOCKCHAIN_BEACON_VALIDATE_BLOCK_VALUES_06
        description: |
          Given that 'prev' round and the max beacon round for 'h' are different,
          return error if the *last* beacon round for 'h' is not equal to 'prev' round
      - id: BLOCKCHAIN_BEACON_VALIDATE_BLOCK_VALUES_07
        description: |
          Given that any beacon entry in 'h' is invalid (comparing it the preceeding entry),
          return error

  - name: Get beacon entries for block
    behaviors:
      - id: BLOCKCHAIN_BEACON_GET_BEACON_ENTRIES_FOR_BLOCK_01
        description: | 
          Given a context, block schedule, current chain epoch 'current',
          parent epoch 'parent', and previous beacon entry 'prev',
          and that the beacons for 'parent' and 'current' epoch are different,
          return beacon entries for the current and previous max beacon
          round in 'current'.
          See `Get beacon for epoch` on beacon retrieval
      - id: BLOCKCHAIN_BEACON_GET_BEACON_ENTRIES_FOR_BLOCK_02
        description: | 
          Given a context, block schedule, current chain epoch 'current',
          parent epoch 'parent', and previous beacon entry 'prev',
          and that the beacons for 'parent' and 'current' are equal,
          return nothing if max beacon round for 'current' is equal to 'prev'
      - id: BLOCKCHAIN_BEACON_GET_BEACON_ENTRIES_FOR_BLOCK_03
        description: | 
          Given a context, block schedule, current chain epoch 'current',
          parent epoch 'parent', and previous beacon entry 'prev',
          and that the beacons for 'parent' and 'current' are equal,
          return nothing if max beacon round for 'current' is greater than 'prev',
          return all beacon entries between 'prev' and max beacon round for 'current'

  - name: New Drand beacon
    behaviors:
      - id: BLOCKCHAIN_BEACON_DRAND_NEW_DRAND_BEACON_01
        description: |
          Given a genesis ticket, interval, optional pubsub, and drand config,
          return a new DRAND Beacon with the specified fields set
  
  - name: Get entry
    behaviors: 
      - id: BLOCKCHAIN_BEACON_DRAND_GET_ENTRY_01
        description: |
          Given a Drand beacon, a context, and a chain round,
          return a channel which returns a beacon entry (ie. random data)

  - name: Cache value
    behaviors:
      - id: BLOCKCHAIN_BEACON_DRAND_CACHE_VALUE_01
        description: |
          Given a Drand beacon, and a beacon entry,
          cache the entry in the beacon's cache for the entry's round
  
  - name: Get Cached value
    behaviors:
      - id: BLOCKCHAIN_BEACON_DRAND_GET_CACHED_VALUE_01
        description: |
          Given a round, and cached entry exists in the beacon for that round,
          return the cached entry
      - id: BLOCKCHAIN_BEACON_DRAND_GET_CACHED_VALUE_02
        description: |
          Given a round, and cached entry does not exist in the beacon's cache,
          return nothing

  - name: Verify entry
    behaviors:
      - id: BLOCKCHAIN_BEACON_DRAND_VERIFY_ENTRY_01
        description: |
          Given a current round beacon entry 'curr', and a previous round beacon
          entry 'prev', verify that 'curr' is a valid beacon entry and return noting (no error)
      - id: BLOCKCHAIN_BEACON_DRAND_VERIFY_ENTRY_02
        description: |
          Given that 'curr' round is not equal to 'prev' round + 1, return error
      - id: BLOCKCHAIN_BEACON_DRAND_VERIFY_ENTRY_03
        description: |
          Given that cached entry exists for 'curr' round, and that 'curr'
          data is not equal to the cached value, return error
      - id: BLOCKCHAIN_BEACON_DRAND_VERIFY_ENTRY_04
        description: |
          Given that the Drand beacon constructed using 'prev' entry, and 'curr'
          round and signature is invalid (ie. the beacon does not verify the pubkey),
          return error
          
  - name: Get max beacon round for epoch
    behaviors:
      - id: BLOCKCHAIN_BEACON_DRAND_GET_MAX_BEACON_ROUND_FOR_EPOCH_01
        description: |
          Given a Drand beacon 'db', and a chain epoch 'epoch', return max beacon
          round time for the epoch, given by the formula:
          `t = ((epoch * db.filRoundTime) + db.filGenTime) - db.filRoundTime`
          `maxRound = (t - db.drandGenTime) / db.interval.Seconds`