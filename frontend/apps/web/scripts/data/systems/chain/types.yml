system: Chain
subsystem: Types
features:
  - name: Compute win count
    behaviors:
      - id: TYPES_ELECTION_PROOF_COMPUTE_WIN_COUNT_001
        description: |
          Given two numbers: 'power' and 'totalPower', compute the number of wins
          using VRFProof
  
  - name: Parse FIL
    behaviors:
      - id: TYPES_FIL_PARSE_001
        description: |
          Given a string representing the number of FIL 's',
          parse and return the FIL amount
      - id: TYPES_FIL_PARSE_002
        description: |
          If parsing fails, return an error

  - name: Equal call
    behaviors:
      - id: TYPES_MESSAGE_EQUAL_CALL_001
        description: |
          Given two messages 'o' and 'm',
          return true if messages are equal

  - name: Message Json Equal call
    behaviors:
      - id: TYPES_MESSAGE_JSON_EQUAL_CALL_001
        description: |
          Aftern encoding json message, check if the formating is correct
  
  - name: Message Json Equal call
    behaviors:
      - id: TYPES_MESSAGE_JSON_EQUAL_CALL_002
        description: |
          Decode previously encoded json message and compare it to original message

  - name: New tipset key
    behaviors:
      - id: TYPES_TIPSETKEY_NEW_001
        description: |
          Build and return a new key from a slice of CIDs
  
  - name: Tipset key from bytes
    behaviors:
      - id: TYPES_TIPSETKEY_FROM_BYTES_001
        description: |
          Given an encoded array of bytes containing a key 'encoded',
          decode the key and return it as a tipset key

  - name: Block header to CBOR
    behaviors:
      - id: CHAIN_TYPES_BLOCK_HEADER_TO_CBOR_001
        description: |
          Given a block header,
          serialize it to CBOR

  - name: Block header from CBOR
    behaviors:
      - id: CHAIN_TYPES_BLOCK_HEADER_FROM_CBOR_001
        description: |
          Given a CBOR representation of a block header,
          deserialize it.

  - name: Poisson inverted CDF
    behaviors:
      - id: CHAIN_TYPES_POISSON_001
        description: |
          Given a lambda in Q.256 format,
          return Poisson CDF value and `1-poisscdf(0, lambda)`.
          CDF value returend is reused when calling `next`

  - name: Lambda Q.256
    behaviors:
      - id: CHAIN_TYPES_LAMBDA_001
        description: |
          Given power and total power,
          return lambda in Q.256 format

  - name: Negative Exponential
    behaviors:
      - id: CHAIN_TYPES_NEGATIVE_EXP_001
        description: |
          Given x in Q.256 format,
          compute and return e^-x