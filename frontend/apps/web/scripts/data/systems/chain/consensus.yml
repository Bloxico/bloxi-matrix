# TODO: write additional block validation rules
system: Chain
subsystem: Consensus
features:
  - name: Validate Block
    behaviors:
      - id: CHAIN_CONSENSUS_VALIDATE_BLOCK_001
        description: |
          Given a valid Full Block, return nil. 
          For the definition of an (in)valid block, see other behaviors in this feature.
      - id: CHAIN_CONSENSUS_VALIDATE_BLOCK_002
        description: |
          Given an invalid block header, throw an error.
          A header is invalid if:
            1. election proof is nil
            2. ticket is nil
            3. signature is nil
            4. bls aggregate signature is nil
            5. miner address is a non-ID address
      - id: CHAIN_CONSENSUS_VALIDATE_BLOCK_003
        description: |
          Given an unknown parent tipset, throw an error
      - id: CHAIN_CONSENSUS_VALIDATE_BLOCK_004
        description: |
          Given a block height not greater than parent height, throw an error
      - id: CHAIN_CONSENSUS_VALIDATE_BLOCK_005
        description: |
          Given a wrong timestamp, throw an error
      - id: CHAIN_CONSENSUS_VALIDATE_BLOCK_006
        description: |
          Given a block "from the future" not within the allowed treshold, throw an error
      - id: CHAIN_CONSENSUS_VALIDATE_BLOCK_007
        description: |
          Given there are invalid messages in the block, throw an error
      - id: CHAIN_CONSENSUS_VALIDATE_BLOCK_008
        description: |
          Given invalid miner info, throw an error
  
  - name: Validate Epoch
    behaviors:
      - id: CHAIN_CONSENSUS_VALIDATE_EPOCH_001
        description: |
          Given a Chain Epoch, return false if it's beyond the current maximum epoch. 
          Return true otherwise

  - name: Create Block
    behaviors:
      - id: CHAIN_CONSENSUS_CREATE_BLOCK_001
        description: |
          Given a block template and an API interface to the wallet,
          create, sign and return a new full block