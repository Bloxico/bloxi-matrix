Scenario ID,Feature Name,Behavior,Last Modified,Created,Subsystem,System (from Subsystem)
CHAIN_NOTIFY_001,Chain Notify,returns a channel that streams chain head updates,Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_NOTIFY_002,Chain Notify,"first message is guaranteed to be of len == 1, and type == “current”",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
STATE_SEARCH_001,State Search Message,Returns the message receipt and the tipset where it was executed,Nikola Divic,"November 1, 2021",State Tree,Blockchain
STATE_SEARCH_002,State Search Message,"Given a replacing message existing on the chain and allowReplaced=true , it returns the replacing message (not the original)",Nikola Divic,"November 1, 2021",State Tree,Blockchain
STATE_SEARCH_003,State Search Message,"given a replacing message exists on the chain and allowReplaced=false, it returns the original message",Nikola Divic,"November 1, 2021",State Tree,Blockchain
API_VERSION_001,API Version,Returns the actual build version of the node,Nikola Divic,"November 1, 2021",Common,API
BIG_INT_001,Big Int ,"Succeeds if bigint conversion, marshal, unmarshal and comparison work",Nikola Divic,"October 25, 2021",Common,Blockchain
BIG_INT_002,Big Int,Succeeds if FIL value parses correctly and values match,Nikola Divic,"October 25, 2021",Common,Blockchain
BIG_INT_003,Big Int,Succeeds if the number value equals to the string value,Nikola Divic,"October 25, 2021",Common,Blockchain
BIG_INT_005,Big Int,Succeeds if ZiB converts properly ,Nikola Divic,"October 25, 2021",Common,Blockchain
BLOCK_HDR_001,Block Header,Succeeds if CBOR marshals and unmarshals properly. ,Nikola Divic,"October 25, 2021",Common,Blockchain
BLOCK_HDR_002,Block Header,Succeeds if a Block Header is properly encoded,Nikola Divic,"October 25, 2021",Common,Blockchain
BLOCK_HDR_003,Block Header,Succeeds if Block Headers get properly marshalled ,Nikola Divic,"October 25, 2021",Common,Blockchain
CHAIN_BLOCKSTORE_001,Non Prefixed,Runs all Non-Prefixed methods from a suite,Nemanja Radenkovic,"November 1, 2021",Blockstore,Blockchain
CHAIN_BLOCKSTORE_002,Prefixed,Runs all Prefixed methods from a suite,Nemanja Radenkovic,"November 1, 2021",Blockstore,Blockchain
CHAIN_BLOCKSTORE_INFO_001,Chain Get Blockstore Info,Returns basic information about the underlying blockstore,Nikola Divic,"October 31, 2021",Blockstore,Blockchain
CHAIN_CHECK_BLOCKSTORE_001,Chain Check Blockstore,Performs an (async) health check on the chain/state blockstore if supported by the underlying implementation,Nikola Divic,"November 3, 2021",Blockstore,Blockchain
CHAIN_DELETE_OBJ_001,Chain Delete Object,"Given a known CID and the user has admin privileges, delete the node with the specified CID from the chain blockstore",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_EXPORT_001,Chain Export,"Given a known Tipset key and nroots, return a stream of bytes including the header chain from the given tipset back to genesis, the entire genesis state, and the most recent nroots state trees",Nikola Divic,"October 31, 2021",Blockstore,Blockchain
CHAIN_EXPORT_002,Chain Export,"Given oldmsgskip is true, messages from before the requested roots are not included",Nikola Divic,"October 31, 2021",Blockstore,Blockchain
CHAIN_GET_BLOCK_001,Get Block,"Given a known block CID, returns the corresponding block",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_BLOCK_002,Get Block,"Given an unknown block CID, return a ""Not Found"" error",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_BLOCK_MESSAGES_001,Get Block Messages,"Given an existing block CID, returns messages in the specified block",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_GENESIS_001,Chain Get Genesis,Returns the genesis tipset,Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_MESSAGE_001,Chain Get Message,"Given a known message CID, return the message from the blockstore with specifed CID",Nikola Divic,"October 31, 2021",Blockstore,Blockchain
CHAIN_GET_MESSAGES_IN_TIPSET_001,Get Messages in Tipset,"Given a known tipset key, return messsages stored in the specified tipset",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_PARENT_MESSAGES_001,Get Parent Messages,"Given a known block CID, returns messages stored in parent tipset of the specified block",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_PARENT_MESSAGES_002,Get Parent Messages,"Given a known block CID, return the same list of messages as CHAIN_GET_PARENT_RECEIPTS_001",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_PARENT_RECEIPTS_001,Get Parent Receipts,"Given a known block CID, returns receipts for messages in the parent tipset of the specified block",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_PARENT_RECEIPTS_002,Get Parent Receipts,"Given a known block CID, return the same list of messages as CHAIN_GET_PARENT_MESSAGES_001",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_PATH_001,Chain Get Path,"Given two known Tipset keys, return a set of revert/apply operations needed to get from one tipset to another",Nikola Divic,"October 31, 2021",Blockstore,Blockchain
CHAIN_GET_TIPSET_001,Get Tipset,"Given a Tipset key, return the tipset",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_TIPSET_AFTER_HEIGHT_001,Get Tipset after height,"Given a chain epoch (height), return the tipset at the specified epoch",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_TIPSET_AFTER_HEIGHT_001,Get Tipset after height,"Given there are no blocks at the specified epoch, return the first non-ni tipset at a later epoch",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_TIPSET_BY_HEIGHT_001,Get Tipset by height,"Given a chain epoch (height), return the tipset at the specified epoch",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_GET_TIPSET_BY_HEIGHT_002,Get Tipset by height,"Given there are no blocks at the specified epoch, return a tipset at an earlier epoch",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_HAS_OBJ_001,Chain Has Object,"Given a CID of an object that exists in the chain blockstore, return true",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_HAS_OBJ_002,Chain Has Object,"Given a CID of an object that doesn't exist in the chain blockstore, return false",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_HEAD_001,Get Chain Head,"Returns the current TipSet of the chain",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_READ_OBJ_001,Chain Read Object,"Given a known CID, return raw bytes of IPLD nodes from the chain blockstore referenced by the specifed CID",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_SET_HEAD_001,Chain Set Head,"Given a known tipset key and that the user has admin privileges, forcefully set the current chain head",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_STAT_OBJ_001,Chain Stat Object,"Given a known CID, return statistics about the graph referenced by the specified CID",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_STAT_OBJ_002,Chain Stat Object,"Given a known CID and a base CID, return the difference betwen the objects referenced by the two CIDs",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CHAIN_TIPSET_WEIGHT_001,Chain Tipset Weight,"Given a known tipset key, compute and return the weight of the specifed tipset",Nikola Divic,"November 1, 2021",Blockstore,Blockchain
CLIENT_BLOCKSTORE_001,Read/Write blockstore,Creates a new Read/Write at the given path with a provided set of root CIDs and options.,Nemanja Radenkovic,"October 31, 2021",Blockstore,Blockchain
CLIENT_CALC_COMMP_001,Client Calculate CommP,"Given a file path, calculate the CommP for the specified file",Nikola Divic,"October 31, 2021",Common,Client
CLIENT_CREATE_DEAL_001,Client Create Deal,"Given a start epoch, CID, miner address, price & duration,  create a deal",Nikola Divic,"November 1, 2021",Storage Deals,Client
CLIENT_DEAL_PIECE_CID_001,Client Deal Piece CID,"Given a root CID, calculate the CommP and data size of the specified CID",Nikola Divic,"October 31, 2021",Retrieval,Client
CLIENT_DEAL_SIZE_001,Client Deal Size,"Given a root CID, calculate the real data size for the specified CID",Nikola Divic,"October 31, 2021",Common,Client
CLIENT_FIND_DATA_001,Client Find Data,"Given root and piece CIDs, return query offers from peers that have the file piece referenced by CIDs",Nikola Divic,"October 31, 2021",Retrieval,Client
CLIENT_FS_001,Create UnixFS Filestore,"Takes a standard file whose path is src, forms a UnixFS DAG, and writes a CARv2 file with positional mapping",Nemanja Radenkovic,"October 31, 2021",File Store,Repository
CLIENT_FS_002,CARv2 to Normal File,"Opens the CAR in the specified path as as a read-only blockstore, and fronts it with a Filestore whose positional mappings are stored inside the CAR itself.",Nemanja Radenkovic,"October 31, 2021",File Store,Repository
CLIENT_FS_003,Create a File,Create file and return file name,Nemanja Radenkovic,"October 31, 2021",File Store,Repository
CLIENT_FS_004,Generate input file,Generate input file,Nemanja Radenkovic,"October 31, 2021",File Store,Repository
CLIENT_GEN_CAR_001,Client Generate CAR,"Given a file reference and an output path, generate a CAR file for the specified file",Nikola Divic,"October 31, 2021",Common,Client
CLIENT_GET_DEAL_INFO_001,Client Get Deal Info,"Given an existing deal CID, return info about the specified deal",Nikola Divic,"October 31, 2021",Storage Deals,Client
CLIENT_GET_DEAL_UPDATES_001,Client List Deals,Returns a channel that streams information about deal updates,Nikola Divic,"October 31, 2021",Storage Deals,Client
CLIENT_HAS_LOCAL_001,Client Has Local,"Given a CID, returns true if data referenced by the CID is stored locally",Nikola Divic,"October 31, 2021",Common,Client
CLIENT_IMPORT,Client Import,Imports the file under the specified path into the filestore,Nikola Divic,"October 31, 2021",Import,Client
CLIENT_IMPORT_001,Import to UnixFS DAG using CARv2,Import a file to a Unixfs DAG using a CARv2 read/write blockstore.,Nemanja Radenkovic,"October 31, 2021",Import,Client
CLIENT_IMPORT_002,Client build UnixFS DAG ,"Builds a UnixFS DAG out of the supplied reader, and imports the DAG into the supplied service.",Nemanja Radenkovic,"October 31, 2021",Import,Client
CLIENT_IMPORT_003,Import to Node,"Imports a standard file into this node as a UnixFS payload, storing it in a CARv2 file.",Nemanja Radenkovic,"November 1, 2021",Import,Client
CLIENT_IMPORT_004,List Imports,"Lists all Imports",Nemanja Radenkovic,"November 1, 2021",Import,Client
CLIENT_IMPORT_005,Retrieve Import,Retrieves Import as UnixFS,Nemanja Radenkovic,"November 1, 2021",Import,Client
CLIENT_IMPORT_006,Open CARv2,Open the CARv2 being custodied by the import manager,Nemanja Radenkovic,"November 1, 2021",Import,Client
CLIENT_IMPORT_007,Get Root CIDs,Returns the root CIDs,Nikola Divic,"November 1, 2021",Import,Client
CLIENT_LIST_DATA_TRANSFERS_001,Client List Data Transfers,Returns the status of all ongoing transfers of data,Nikola Divic,"November 1, 2021",Retrieval,Client
CLIENT_LIST_DEALS,Client List Deals,Returns information about the deals made by the local node,Nikola Divic,"November 1, 2021",Storage Deals,Client
CLIENT_LIST_DEALS_001,Client List Deals,Return information about all deals made by the local client,Nikola Divic,"October 31, 2021",Storage Deals,Client
CLIENT_LIST_RETRIEVALS_001,Client List Retrievals,Return information about all retrievals made by the local client,Nikola Divic,"October 31, 2021",Retrieval,Client
CLIENT_MINER_QUERY_OFFER_001,Client Miner Query Offer,"Given a miner address, root & piece CIDs, returns the query offer for the specified miner and CIDs",Nikola Divic,"October 31, 2021",Retrieval,Client
CLIENT_QUERY_ASK_001,Client Query Ask,"Given an address and a peer ID, returns a signed storage ask from the specified miner",Nikola Divic,"November 1, 2021",Storage Deals,Client
CLIENT_QUERY_ASK_001,Client Query Ask,"Given a miner address, return a signed storage ask from the specified miner",Nikola Divic,"October 31, 2021",Retrieval,Client
CLIENT_REMOVE_IMPORT_001,Client Remove Import,"Given an existing import ID, deletes the imported file",Nikola Divic,"October 31, 2021",Import,Client
CLIENT_RETRIEVE_001,Client Retrieve,"initiates the retrieval of a file, as specified in the order",Nikola Divic,"November 1, 2021",Retrieval,Client
CLIENT_RETRIEVE_001,Client Retrieve,"Given an existing retrieval order and a file reference, initiate the retrieval of the file specified in the order",Nikola Divic,"October 31, 2021",Retrieval,Client
CLIENT_START_DEAL_001,Client Start Deal,"Given an imported data CID, existing miner address, price & duration, propose a deal to the miner",Nikola Divic,"October 31, 2021",Storage Deals,Client
FIL_PARSE_001,FIL Value Parse,Succeeds if FIL value is validly parsed	,Nikola Divic,"October 25, 2021",Common,Blockchain
GAS_ESTIMATE_CAP_001,Gas Estimate Cap,"Given a Message and a known Tipset key, return an estimated gas fee cap for the specified message",Nikola Divic,"October 31, 2021",Common,Virtual Machine
GAS_ESTIMATE_LIMIT_001,Gas Estimate Limit,"Given a Message and a known Tipset key, return the estimated gas limit for the specified message",Nikola Divic,"October 31, 2021",Common,Virtual Machine
GAS_ESTIMATE_LIMIT_002,Gas Estimate Limit,Fails if given message fails to execute,Nikola Divic,"October 31, 2021",Common,Virtual Machine
GAS_ESTIMATE_PREMIUM_001,Gas Estimate Premium,"Given a number of epochs nblocksincl, estimate what gas price should be used for a message to have high likelihood of inclusion in specified number of epochs",Nikola Divic,"October 31, 2021",Common,Virtual Machine
MINER_CREATE_BLOCK_001,Miner Create Block,"Given a block template, create a new block and return a full block message signed by the local (miner) node",Nikola Divic,"November 2, 2021",Mining,Miner
MINER_GET_BASE_INFO_001,Miner Get Base Info,"Given a miner address return the miner power, network power, sectors, worker key, sector size, beacon entries and if the miner is eligible for mining ",Nikola Divic,"November 2, 2021",Common,Miner
MPOOL_BATCH_PUSH_001,Message Pool Batch Push,"Given a list of signed messages from a trusted source, perform a batch of mpool pushes (see ""Message Pool Push"")",Nikola Divic,"October 31, 2021",Message Pool,Blockchain
MPOOL_BATCH_PUSH_UNTRUSTED_001,Message Pool Batch Push Untrusted,"Given a list of signed messages from an untrusted source, perform a batch of mpool pushes (see ""Message Pool Push Untrusted"")",Nikola Divic,"October 31, 2021",Message Pool,Blockchain
MPOOL_CHECK_MESSAGES_001,Message Pool Check Messages,"Given a list of messages, perform logical checks: check the actor balance, serialization, message size, syntax validity, gas limit, min base fee, base fee, nonce, required funds and balance and return the status of each check ",Nikola Divic,"October 31, 2021",Message Pool,Blockchain
MPOOL_CHECK_PENDING_MESSAGES_001,Message Pool Check Pending Messages,"Given an address, perform logical checks (see ""Message Pool Check Messages"") for all pending messages from the specified address",Nikola Divic,"October 31, 2021",Message Pool,Blockchain
MPOOL_CLEAR_001,Message Pool Clear,Clear all pending messages from the mempool,Nikola Divic,"November 1, 2021",Message Pool,Blockchain
MPOOL_GET_NONCE_001,Message Pool Get Nonce,"Given an sender address, returns the next nonce for the specified sender",Nikola Divic,"November 1, 2021",Message Pool,Blockchain
MPOOL_PENDING_001,Message Pool Pending,"Given a known tipset key, return all pending mempool messages",Nikola Divic,"October 31, 2021",Message Pool,Blockchain
MPOOL_PUSH_001,Message Pool Push,"Given a signed Message, add it to the mempool and return its CID. Don't perform extra strict checks",Nikola Divic,"October 31, 2021",Message Pool,Blockchain
MPOOL_PUSH_MESSAGE_001,Message Pool Push Message,"Given an unsigned Message, atomically asign a nonce, sign it and push it to the mempool",Nikola Divic,"October 31, 2021",Message Pool,Blockchain
MPOOL_PUSH_UNTRUSTED_001,Message Pool Push Untrusted,"Given a signed Message from an untrusted source, push it to the mempool and return its CID. Perform extra strict checks such as: no nonce gaps, at most 10 pending messages for the actor",Nikola Divic,"October 31, 2021",Message Pool,Blockchain
MPOOL_SELECT_001,Message Pool Select,"Given a known Tipset key and a ticket quality, return the ""optimal"" list of messages for inclusion in the next block",Nikola Divic,"October 31, 2021",Message Pool,Blockchain
MSG_CALL_001,Message Call,Succeeds if message struct does not differ in method in an actor's function table,Nikola Divic,"November 1, 2021",Runtime,Virtual Machine
MSG_CALL_002,Message Call,Succeeds if a regular (unsigned) message performs a full round trip (marshal -> unmarshal) ,Nikola Divic,"November 1, 2021",Runtime,Virtual Machine
MSG_CALL_003,Message Call,Succeeds if a signed message performs a full round trip (marshal -> unmarshal),Nikola Divic,"November 1, 2021",Runtime,Virtual Machine
NODE_CONFIG_001,Read Empty File,Config from empty file should be the same as default,Nemanja Radenkovic,"November 1, 2021",Node,Repository
NODE_CONFIG_002,Read Non-existent File,Config from not exisiting file should be the same as default,Nemanja Radenkovic,"November 1, 2021",Node,Repository
NODE_CONFIG_003,Default Full Node Config,Write config based on default full node,Nemanja Radenkovic,"November 1, 2021",Node,Repository
NODE_CONFIG_004,Default Miner Node Config,Write config based on default miner node,Nemanja Radenkovic,"November 1, 2021",Node,Repository
NODE_SHUTDOWN_001,Shutdown Handler,Create shutdown handler,Nemanja Radenkovic,"November 1, 2021",Node,Repository
NODE_SHUTDOWN_002,Shutdown Monitor,"Manages shutdown requests, by watching signals and invoking the supplied handlers in order.",Nemanja Radenkovic,"November 1, 2021",Node,Repository
PAYCH_ALLOC_001,Payment Channel Allocate Lane,Succeeds if channel address and lane number are valid,Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_BEST_001,Payment Channel Best Spendable,Returns the best spendable voucher if channel address is valid,Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_COLLECT_001,Payment Channel Collect,"Transfers the ToPay amount to the recipient and the remaining change to the sender, if it's called either by the sender or recipient",Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_COLLECT_002,Payment Channel Collect,Fails if not signed by both parties,Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_CREATE_001,Payment Channel Create,"Succeeds if sender, recipient and amount are valid",Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_CREATE_002,Payment Channel Create,Supports both ID and non-ID sender and recipient addresses,Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_CREATE_003,Payment Channel Create,Fails if sender or recipient addresses are not resolvable to an ID address,Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_LIST_001,Payment Channel List Vouchers,Returns a list of vouchers if channel address is valid,Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_SETTLE_001,Payment Channel Settle,Succeeds if called by either the sender or recipient,Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_SETTLE_002,Payment Channel Settle,"Fails if called twice",Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_STATUS_001,Payment Channel Status,"Returns  ""Channel does not exist"" if sender and recipient addresses don't have an open channel",Nikola Divic,"October 25, 2021",Payment Channels,Token
PAYCH_STATUS_002,Payment Channel Status,"Returns channel status, balance and a list of vouchers, if the channel was created",Nikola Divic,"October 25, 2021",Payment Channels,Token
REPO_FS_001,Filesystem Based Repo,Creates a repository instance based on a path on file system,Nemanja Radenkovic,"October 31, 2021",Common,Repository
REPO_FS_002,Filesystem Repo Initialization,Initializes Filesystem based repository,Nemanja Radenkovic,"October 31, 2021",Common,Repository
REPO_GAS_001,Median Gas,Finds 55th percentile instead of median to put negative pressure on gas price,Nemanja Radenkovic,"October 31, 2021",Node,Repository
REPO_KEYSTR_001,Create KeyStore Object,Should be able to create KeyStore object,Nemanja Radenkovic,"October 31, 2021",Key Store,Repository
REPO_KEYSTR_002,List Keys,Should be able to list keys from KeyStore,Nemanja Radenkovic,"October 31, 2021",Key Store,Repository
REPO_KEYSTR_003,Insert Key,Inserts key/value pair into KeyStore,Nemanja Radenkovic,"October 31, 2021",Key Store,Repository
REPO_KEYSTR_004,Key Conflict,Inserting Key that already exists should error out,Nemanja Radenkovic,"October 31, 2021",Key Store,Repository
REPO_KEYSTR_006,Delete Key,Deletes the record from KeyStore given the Key as argument,Nemanja Radenkovic,"October 31, 2021",Key Store,Repository
REPO_MEM_001,Memory Based Repo, Creates new memory based repository with provided options,Nemanja Radenkovic,"October 31, 2021",Common,Repository
REPO_MUT_001,Node Lock,Node should be able to lock once,Nemanja Radenkovic,"October 31, 2021",Node,Repository
REPO_MUT_002,Node Already Locked,Already locked nodes should return errors,Nemanja Radenkovic,"October 31, 2021",Node,Repository
REPO_MUT_003,Node Unlock,"Node should be able to unlock",Nemanja Radenkovic,"October 31, 2021",Node,Repository
REPO_NET_001,Api Endpoint,Api endpoint should return multiaddress for communication with Lotus API,Nemanja Radenkovic,"October 31, 2021",Network,Repository
REPO_NET_002,Set Api Endpoint,Set the endpoint of the current API so it can be read by API clients,Nemanja Radenkovic,"October 31, 2021",Network,Repository
REPO_NET_003,Api Endpoint with closed repo,"When node closes, multiaddress should be null",Nemanja Radenkovic,"October 31, 2021",Network,Repository
SERIALIZE_MSG_001,Message Serialize,Succeeds if a message's byte serialization does not fail,Nikola Divic,"November 1, 2021",Runtime,Virtual Machine
SIG_RTR_001,Signature Round Trip,Suceeds if a successful round trip is peformed (CBOR marshal -> unmarshal),Nikola Divic,"November 1, 2021",Common,Blockchain
SIGNED_MSG_001,Message Serialization,Succeeds if JSON marshal and unmarshal succeeds,Nikola Divic,"November 1, 2021",Runtime,Virtual Machine
STATE_LIST_MINERS_001,State list miner,Returns the addresses of every miner that has claimed power in the power actor,Nikola Divic,"November 1, 2021",State Tree,Blockchain
SYNC_CHECK_BAD_001,Sync Check Bad,"Given a known block CID, return if it was marked as bad and the reason",Nikola Divic,"October 31, 2021",Syncer,Blockchain
SYNC_CHECKPOINT_001,Sync Checkpoint,"Given a known Tipset key, mark those blocks as checkpointed, meaning that it won't ever fork away from it",Nikola Divic,"October 31, 2021",Syncer,Blockchain
SYNC_INCOMING_BLOCKS_001,Sync Incoming Blocks,"Returns a channel streaming incoming, potentially not yet synced block headers",Nikola Divic,"October 31, 2021",Syncer,Blockchain
SYNC_MARK_BAD_001,Sync Mark Bad,"Given a known block CID, mark it as bad, meaning that it won't ever be synced",Nikola Divic,"October 31, 2021",Syncer,Blockchain
SYNC_STATE_001,Sync State,Returns a list of sync states for each sync worker of the local node,Nikola Divic,"October 31, 2021",Syncer,Blockchain
SYNC_SUBMIT_BLOCK_001,Sync Submit Block,"Given a newly created block, submit it to the network through the local node",Nikola Divic,"October 31, 2021",Syncer,Blockchain
SYNC_UNMARK_ALL_BAD_001,Sync Unmark All Bad,"Unmarks all blocks marked as bad, making them possible to sync",Nikola Divic,"October 31, 2021",Syncer,Blockchain
SYNC_UNMARK_BAD_001,Sync Unmark Bad,"Given a CID of a block that's marked as bad, unmark it, making it possible to be validated and synced again",Nikola Divic,"October 31, 2021",Syncer,Blockchain
SYNC_VALIDATE_TIPSET_001,Sync Validate Tipset,"Given a known Tipset key, return if the specified tipset is valid or not",Nikola Divic,"October 31, 2021",Syncer,Blockchain
TIPSET_KEY_001,Tipset Key Create,Succeeds if a tipset key is valid and generated in a proper format,Nikola Divic,"November 1, 2021",Common,Blockchain
VOUCH_CREATE_001,Voucher Create,"Succeeds if the channel address, nonce and amount are valid",Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_CREATE_002,Voucher Create,"Fails if voucher address does not match the channel address",Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_CREATE_003,Voucher Create,Fails if creator balance < voucher amount,Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_CREATE_004,Voucher Create,Fails if sum of voucher amounts > channel balance,Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_CREATE_005,Voucher Create,Fails if voucher signature is invalid,Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_CREATE_006,Voucher Create,Fails when signed by channel recipient instead of sender,Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_CREATE_007,Voucher Create,Fails when nonce too low,Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_REDEEM_001,Voucher Redeem,"Succeeds, given a valid channel address, voucher and lane",Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_REDEEM_002,Voucher Redeem,Fails on nonce reuse,Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_REDEEM_004,Voucher Redeem,Fails if voucher balance < 0,Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_REDEEM_005,Voucher Redeem,Fails if >12hrs since the channel was settled,Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_REDEEM_006,Voucher Redeem,Succeds if <12hrs since the channel was settled,Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_REDEEM_007,Voucher Redeem,Fails if current height < Voucher.TimeLock,Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_REDEEM_008,Voucher Redeem,"Fails if voucher signature is invalid",Nikola Divic,"October 25, 2021",Payment Channels,Token
VOUCH_REDEEM_009,Voucher Redeem,Fails if current height >= Voucher.TimeLockMax,Nikola Divic,"October 25, 2021",Payment Channels,Token
WALLET_BALANCE_001,Wallet Balance,"Given a known address, returns the balance of the specified address at the current head of the chain",Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_DEFAULT_ADDRESS_001,Wallet Default Address,Returns the address marked as default in the wallet,Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_DELETE_001,Wallet Delete,"Given a (local) address, delete the specified address from the wallet",Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_EXPORT_001,Wallet Export,"Given a (local) address, return the private key of the specified address",Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_HAS_001,Wallet Has,"Given an address, return true if the specified address is in the wallet",Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_IMPORT_001,Wallet Import,"Given a private key, import it to the wallet and return the associated address",Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_LIST_001,Wallet List,Return a list of all addresses in the wallet,Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_NEW_001,Wallet New,"Creates and returns a new address with the given sigType, one of: bls, secp256k1, secp256k1-ledger",Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_SET_DEFAULT_001,Wallet Set Default,"Given a (local) address, mark it as the default",Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_SIGN_001,Wallet Sign,"Given an (local) address and an array of bytes, return the signature of the specified bytes",Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_SIGN_MESSAGE_001,Wallet Sign Message,"Given a (local) address and an unsigned message, sign and return a signed message",Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_VALIDATE_ADDRESS_001,Wallet Validate Address,"Given a string, return the address if it can be decoded",Nikola Divic,"October 31, 2021",Wallet,Token
WALLET_VERIFY_001,Wallet Verify,"Given (any) address, a signature and some bytes, return true if the signature is valid for the specified address and input bytes",Nikola Divic,"October 31, 2021",Wallet,Token
CLIENT_DATA_TRANSFER_UPDATES_001,Data Transfer Updates,Fetch data transfer channels that were updated,Nemanja Radenkovic,"November 1, 2021",Retrieval,Client
CLIENT_RESTART_DATA_TRANSFER_001,Restart Data Transfer,Attempt to restart a data transfer with the given transfer ID and other peer,Nemanja Radenkovic,"November 1, 2021",Data Transfer,Client
MINER_INIT_001,Miner Initialization,"Given miner and worker keys, sector size, initialize the miner repository on the local file system",Nikola Divic,"November 1, 2021",Common,Miner
CLIENT_RESTART_DATA_TRANSFER_002,Restart Data Transfer Self Peer,Attemp to restart a data transfer with the given transfer ID and other peer and set yourself as initiator peer for data transfer,Nemanja Radenkovic,"November 1, 2021",Data Transfer,Client
CLIENT_CANCEL_DATA_TRANSFER_001,Cancel Data Transfer,Cancels a data transfer with the given transfer ID and other peer,Nemanja Radenkovic,"November 1, 2021",Data Transfer,Client
CLIENT_CANCEL_DATA_TRANSFER_002,Cancel Data Transfer Self Peer,Cancels a data transfer with the given transfer ID and other peer and set yourself as initiator peer for data transfer,Nemanja Radenkovic,"November 1, 2021",Data Transfer,Client
MINER_INIT_002,Miner Initialization,Fails if it can't connect to the full node API,Nikola Divic,"November 1, 2021",Common,Miner
MINER_INIT_003,Miner Initialization,Fails if the full node API doesn't support API v1,Nikola Divic,"November 1, 2021",Common,Miner
MINER_INIT_004,Miner Initialization,Fails if the miner repo was already initialized,Nikola Divic,"November 1, 2021",Common,Miner
CLIENT_RETRIEVE_INSUFFICIENT_FUNDS_001,Data Transfer Restart on Insufficient funds,Attempts to restart stalled retrievals on a given payment channel,Nemanja Radenkovic,"November 1, 2021",Retrieval,Client
MINER_INIT_005,Miner Initialization,"Given some metadata about presealed sectors, initialize the repo as a genesis miner",Nikola Divic,"November 1, 2021",Common,Miner
CLIENT_CANCEL_RETRIEVAL_DEAL_001,Cancel Retrieval Deal,Cancels an ongoing retrieval deal based on Deal ID,Nemanja Radenkovic,"November 1, 2021",Retrieval,Client
CLIENT_CANCEL_RETRIEVAL_DEAL_002,Cancel Retrieval Deal,Fails if underlying state store doesn't succeed,Nemanja Radenkovic,"November 1, 2021",Retrieval,Client
MINER_INIT_006,Miner Initialization,"Given a file path, initialize the miner repo from the backup file specified by the file path",Nikola Divic,"November 1, 2021",Common,Blockchain
STATE_CALL_001,Chain State,"Given the message and tipset key, queries, inspects or interacts with chain state",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
MINER_RUN_001,Miner Run,Start mining using GPU,Nikola Divic,"November 2, 2021",Mining,Miner
MINER_RUN_002,Miner Run,"Given that GPU proving is disabled, start mining without the GPU",Nikola Divic,"November 2, 2021",Mining,Miner
STATE_REPLAY_001,Chain State,"Replays a given message, assuming it was included in a block in the specified tipset",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_REPLAY_002,Chain State,"When no tipset key is provided, the appropriate tipset is looked up, and if the message was gas-repriced, the on-chain message will be replayed",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_GET_ACTOR_001,Chain State Actor,Returns the indicated actor's nonce and balance given the actor and tipset,Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
MINER_STOP_001,Miner Stop,Stop a running miner,Nikola Divic,"November 2, 2021",Mining,Miner
STATE_GET_ACTOR_STATE_001,Chain State Actor,Returns the indicated actor's state given the actor and tipset,Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_LIST_MESSAGES_001,Chain State,"Looks back and returns all messages with a matching to or from address, stopping at the given height",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_LIST_MESSAGES_002,Chain State,Fails if address from and address to is undefined / Must specify at least one,Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_DECODE_PARAMS_001,Chain State,"Attempts to decode the provided params, based on the recipient actor address and method number",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
MINER_SECTOR_STATUS_001,Miner Sector Status,"Given a sector number, return the information about the sector specified",Nikola Divic,"November 1, 2021",Sectors,Miner
STATE_DECODE_PARAMS_002,Chain State,Fails with invalid address for state actor,Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
SECTOR_ADD_PIECE_TO_ANY_001,Sector Add Piece to any,"Given a piece, add it to an open sector. If no sectors with enough space are open, create a new sector",Nikola Divic,"November 1, 2021",Sectors,Miner
SECTOR_ADD_PIECE_TO_ANY_002,Sector Add Piece to any,"If a new sector can't be created, wait until more space is available",Nikola Divic,"November 1, 2021",Sectors,Miner
STATE_ENCODE_PARAMS_001,Chain State,"Attempts to encode the provided json params to the binary form, provided CID and method",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_ENCODE_PARAMS_002,Chain State,Fails if invalid params are provided,Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_NETWORK_NAME,Chain State,Returns name of the network that node is synced to,Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_MINER_SECTORS_001,Miner Sectors State,"Returns info about the given miner's sectors given the address, tipset and bitfield for given sector",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_MINER_SECTORS_002,Miner Sectors State,"If the filter bitfield is nil, all sectors are included when returning info for sectors, given the address, tipset and bitfield",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_MINER_ACTIVE_SECTORS_001,Miner Sectors State,Returns info about sectors that a given miner is actively proving given the actor address and tipset,Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
MINER_SECTOR_LIST_001,Miner Sector List,Return a list of all pledged sectors,Nikola Divic,"November 1, 2021",Sectors,Miner
MINER_SECTORS_SUMMARY,Miner Sectors Summary,"Return summary info of all pledged sectors, grouped by state",Nikola Divic,"November 1, 2021",Sectors,Miner
SECTORS_LIST_IN_STATES_001,Sectors List in States,"Given a list of sector states, return all pledged sectors in specified states",Nikola Divic,"November 1, 2021",Sectors,Miner
STATE_MINER_PROVING_DEADLINE_001,Miner Proving Deadline,Calculates the deadline at some epoch for a proving period and returns the deadline-related calculations given the actor and tipset,Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
SECTOR_START_SEALING_001,Sector Start Sealing,"Given a number of a sector that is either in Empty or WaitDeals state, trigger sealing early",Nikola Divic,"November 1, 2021",Sectors,Miner
STATE_MINER_POWER_001,State Miner Power,"Returns the power of the indicated miner, given the actor and tipset",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
SECTOR_SET_SEAL_DELAY_001,Sector Set Seal Delay,"Given a duration, set the time that a newly-created sector waits for more deals before it starts sealing",Nikola Divic,"November 1, 2021",Sectors,Miner
SECTOR_GET_SEAL_DELAY_002,Sector Get Seal Delay,Return the time that a newly-created sector waits for more deals before it starts sealing,Nikola Divic,"November 1, 2021",Sectors,Miner
STATE_MINER_INFO_001,Miner Info,"Returns info about the indicated miner, given the actor and tipset information ",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
SECTOR_SET_EXPECTED_SEAL_DURATION_001,Sector Set Expected Seal Duration,"Given a duration, set the expected time for a sector to seal",Nikola Divic,"November 1, 2021",Sectors,Miner
STATE_MINER_DEADLINES_001,Miner Deadlines,"Returns all the proving deadlines for the given miner, given the actor and tipset",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
SECTOR_GET_EXPECTED_SEAL_DURATION_001,Sector Get Expected Seal Duration,Return the expected time for a sector to seal,Nikola Divic,"November 1, 2021",Sectors,Miner
STATE_MINER_PARTITIONS_001,State Miner Partitions,"Returns all partitions in the specified deadline, given the actor, tipset and deadline index",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
SECTOR_REMOVE_001,Sector Remove,"Given a sector number, remove the sector from storage, without terminating it on chain",Nikola Divic,"November 1, 2021",Sectors,Miner
STATE_MINER_FAULTS_001,State Miner Faults,"Returns a bitfield indicating the faulty sectors of the miner, given the actor and tipset",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
SECTOR_TERMINATE_001,Sector Terminate,"Given a sector number, terminate the sector on-chain (add it to a termination batch first), then remove it from storage",Nikola Divic,"November 1, 2021",Sectors,Miner
STATE_ALL_MINER_FAULTS_001,State Miner Faults,Returns all non-expired Faults that occur within lookback epochs of the given tipset,Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
STATE_MINER_RECOVERIES_001,State Miner Recoveries,"Returns a bitfield indicating the recovering sectors of the given miner, given the actor address and tipset",Nemanja Radenkovic,"November 1, 2021",State Tree,Blockchain
SECTOR_TERMINATE_PENDING_001,Sector Terminate Pending,Return a list of sectors pending to be terminated,Nikola Divic,"November 1, 2021",Sectors,Miner
SECTOR_MARK_FOR_UPGRADE_001,Sector Mark for Upgrade,"Given a number of a committed capacity sector, mark the specified sector for upgrade",Nikola Divic,"November 1, 2021",Sectors,Miner
SECTOR_PRE_COMMIT_FLUSH_001,Sector Pre Commit Flush,Immediately sends a PreCommit message with sectors batched for PreCommit. Returns null if message wasn't sent,Nikola Divic,"November 2, 2021",Sectors,Miner
SECTOR_PRE_COMMIT_PENDING_001,Sector Pre Commit Pending,Return a list of pending PreCommit sectors to be sent in the next batch message,Nikola Divic,"November 2, 2021",Sectors,Miner
SECTOR_COMMIT_FLUSH_001,Sector Commit Flush,Immediately sends a Commit message with sectors aggregated for Commit. Returns null if message wasn't sent,Nikola Divic,"November 2, 2021",Sectors,Miner
SECTOR_COMMIT_PENDING_001,Sector Commit Pending,Returns a list of pending Commit sectors to be sent in the next aggregate message,Nikola Divic,"November 2, 2021",Sectors,Miner
WORKER_CONNECT_001,Worker Connect,Connects to all workers RPC,Nikola Divic,"November 2, 2021",Workers,Miner
WORKER_STATS_001,Worker Stats,"Returns information for worker nodes, grouped by worker ID",Nikola Divic,"November 2, 2021",Workers,Miner
WORKER_JOBS_001,Worker Jobs,"Return information about active worker jobs, grouped by worker ID",Nikola Divic,"November 2, 2021",Workers,Miner
STORAGE_ATTACH_001,Storage Attach,"Given information about external storage, attach it to the local storage index",Nikola Divic,"November 2, 2021",Storage,Miner
STORAGE_INFO_001,Storage Info,"Given a store ID, return information about attached storage",Nikola Divic,"November 2, 2021",Storage,Miner
STORAGE_REPORT_HEALTH_001,Storage Report Health,"Given an attached storage ID, return a health report for the specified store",Nikola Divic,"November 2, 2021",Storage,Miner
STORAGE_DECLARE_SECTOR_001,Storage Declare Sector,"Given an attached storage ID and a sector number, create a sector in the specified store",Nikola Divic,"November 2, 2021",Storage,Miner
STORAGE_DROP_SECTOR_001,Storage Drop Sector,"Given an attached storage ID and a sector number, delete a sector from the specified store",Nikola Divic,"November 2, 2021",Storage,Miner
STORAGE_FIND_SECTOR_001,Storage Find Sector,"Given a sector number, return the attached storage ID where the sector is located",Nikola Divic,"November 2, 2021",Storage,Miner
STORAGE_BEST_ALLOC_001,Storage Best Allocate,"Given a sector type and size, return the list of best (optimal) attached stores for specified sector sorted by available space",Nikola Divic,"November 2, 2021",Storage,Miner
STORAGE_STAT_001,Storage Stat,"Given an attached storage ID, return statistics (capacity, available, reserved,...) about the specified store",Nikola Divic,"November 2, 2021",Storage,Miner
MINER_IMPORT_DEAL_DATA_001,Miner Import Deal Data,"Given a file path, import data about the deal stored in the specified file",Nikola Divic,"November 2, 2021",Storage Deals,Miner
API_AUTH_VERIFY_001,API Auth Verify,"Given a JWT token, verify the token and return a list of permissions associated with the specified token",Nikola Divic,"November 2, 2021",Auth,API
API_AUTH_NEW_001,API Auth New,"Given a list of permissions, return a new JWT token with specified permissions",Nikola Divic,"November 2, 2021",Auth,API
API_SHUTDOWN_001,API Shutdown,Trigger a graceful shutdown of the node,Nikola Divic,"November 2, 2021",Common,API
NET_CONNECTEDNESS_001,Net Connectedness,"Given a peer ID, return the capacity for a connection with the specified peer",Nikola Divic,"November 2, 2021",Common,Network
NET_PEERS_001,Net Peers,Return the list of peers connected to the local node,Nikola Divic,"November 2, 2021",,
NET_CONNECT_001,Net Connect,"Given a peer address, connect to the specified peer",Nikola Divic,"November 2, 2021",,
STATE_MINER_PRE_COM_DEPOSIT_FOR_POWER,State Miner,"Returns the pre-commit deposit for the specified miner's sector, given the address, pre-commit sector info and tipset key",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_MINER_INITIAL_PLEDGE_COLLATERAL,State Miner,"Returns the initial pledge collateral for the specified miner's sector, given the address, pre-commit sector info and tipset key",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_MINER_AVAILABLE_BALANCE_001,State Miner,"Returns the portion of a miner's balance that can be withdrawn or spent, given the address and tipset key",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_MINER_SECTOR_ALLOCATED_001,State Miner,"Checks if a sector is allocated, given the sector number and address",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_SECTOR_PRE_COM_INFO_001,State Sector,"Returns the PreCommit info for the specified miner's sector, given the address, sector and tipset key",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_SECTOR_GET_INFO_001,State Sector,"Returns the on-chain info for the specified miner's sector, given the actor, sector info and tipset key",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_SECTOR_GET_INFO_002,State Sector,"When sector is not found, return should be null",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_SECTOR_EXPIRATION_001,State Sector,Returns epoch at which given sector will expire,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_SECTOR_PARTITION_001,State Sector,Finds deadline/partition with the specified sector,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_SEARCH_MSG_001,State Search,"Looks back up to limit epochs in the chain for a message, and returns its receipt and the tipset where it was executed",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_SEARCH_MSG_002,State Search,"If a replacing message is found on chain, this method will return a Message Lookup for the replacing message",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_WAIT_MSG_001,State Wait,Looks back up to limit epochs in the chain for a message,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_WAIT_MSG_002,State Wait,"If a replacing message is found on chain, this method will return a Message Lookup for the replacing message",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_LIST_MINERS_001,State List Miners,Returns the addresses of every miner that has claimed power in the Power Actor given the tipset key,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_LIST_ACTORS_001,State List Actors,Returns the addresses of every actor in the state,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_MARKET_BALANCE,State Market Balance,Looks up the Escrow and Locked balances of the given address in the Storage Market,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_MARKET_PARTICIPANTS_001,State Market Participants,Returns the Escrow and Locked balances of every participant in the Storage Market,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_MARKET_DEALS_001,State Market Deals,Returns information about every deal in the Storage Market,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_MARKET_STORAGE_DEAL_001,State Market Storage Deal,Returns information about the indicated deal,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_LOOKUP_ID_001,State Lookup ID,"Retrieves the ID address of the given address, given the address and tipset",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_ACCOUNT_KEY_001,State Account Key,Returns the public key address of the given ID address,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_CHANGED_ACTORS_001,State Changed Actors,Returns all the actors whose states change between the two given state CIDs,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_MINER_SECTOR_COUNT_001,State Miner Sector Count,Returns the number of sectors in a miner's sector set and proving set,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_COMPUTE_001,State Compute,"Load the provided tipset, or use the current chain head if not provided",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_COMPUTE_002,State Compute,Compute the tipset state of the provided tipset on top of the parent state,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_COMPUTE_003,State Compute,"Execute state upgrade if any were scheduled at the epoch, or in null blocks preceding the tipset",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_COMPUTE_004,State Compute,Call the cron actor on null blocks preceding the tipset,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_COMPUTE_005,State Compute,For each block in the tipset apply messages in blocks in the specified,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_COMPUTE_006,State Compute,For each block in the tipset  award block reward by calling the reward actor,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_COMPUTE_007,State Compute,"If the specified vmheight is higher than the current epoch, apply any needed state upgrades to the state",Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_COMPUTE_008,State Compute,Apply the specified messages to the state,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_VERIFIERS_STATUS_001,State Verifiers Status,Returns the data cap for the given address,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_VERIFIERS_STATUS_002,State Verifiers Status,Returns nil if there is no entry in the data cap table for the address,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_VERIFIED_CLIENT_STATUS_001,State Verified Client Status,Returns the data cap for the given address,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_VERIFIED_CLIENT_STATUS_002,State Verified Client Status,Returns nil if there is no entry in the data cap table for the address,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_VERIFIED_REGISTRY_ROOT_KEY_001,State Verified Registry Root Key,Returns the address of the Verified Registry's root key,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_DEAL_PROVIDER_COLLATERAL_BOUNDS_001,State Deal Provider Collateral Bounds,Returns the min and max collateral a storage provider can issue. It takes the deal size and verified status as parameters.,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_CIRCULATING_SUPPLY_001,State Circulating Supply,Returns the exact circulating supply of Filecoin at the given tipset,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_VM_CIRCULATING_SUPPLY_INTERNAL,State VM Circulating Supply Internal,Returns an approximation of the circulating supply of Filecoin at the given tipset,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_NETWORK_VERSION_001,State Network Version,Returns the network version at the given tipset,Nemanja Radenkovic,"November 2, 2021",State Tree,Blockchain
STATE_GET_RANDOMNESS_FROM_TICKETS_001,State Get Randomness From Tickets,Sample the chain for randomness,Nemanja Radenkovic,"November 3, 2021",State Tree,Blockchain
STATE_GET_RANDOMNESS_FROM_BEACON_001,State Get Randomness From Beacon,Sample the beacon for randomness,Nemanja Radenkovic,"November 3, 2021",State Tree,Blockchain
MSIG_GET_AVAILABLE_BALANCE_001,MSig Available Balance,Takes address and tipset key and returns the portion of a multisig's balance that can be withdrawn or spent,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSING_GET_VESTING_SCHEDULE_001,MSig Get Vesting Schedule,Returns the vesting details of a given multisig,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_GET_VESTED_001,MSig Get Vested,"Returns the amount of FIL that vested in a multisig in a certain period. It takes multisig address, start epoch and end epoch.",Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_GET_PENDING_001,MSig Get Pending,Returns pending transactions for the given multisig wallet,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_CREATE_001,Msig Create,Creates a multisig wallet,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_PROPOSE_001,Msig Propose,Proposes a multisig message,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_APPROVE_001,Msig Approve,Approves a previously-proposed multisig message by transaction ID,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_APPROVE_TRANSACTION_HASH_001,Msig Approve Transaction Hash,"Approves a previously-proposed multisig message, specified using both transaction ID and a hash of the parameters used in the proposal",Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_CANCEL_001,MSig Cancel,Cancels a previously-proposed multisig message,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_ADD_PROPOSE_001,MSig Add Propose,Proposes adding a signer in the multisig,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_ADD_APPROVE_001,MSig Add Approve,Approves a previously proposed AddSigner message,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_ADD_CANCEL_001,MSig Add Cancel,Cancels a previously proposed AddSigner message,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_SWAP_PROPOSE_001,MSig Swap Propose,Proposes swapping 2 signers in the multisig,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_SWAP_APPROVE_001,MSig Swap Approve,Approves a previously proposed SwapSigner,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_SWAP_CANCEL_001,MSig Swap Cancel,Cancels a previously proposed SwapSigner message,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MSIG_REMOVE_SINGER_001,MSig Remove Singer,Proposes the removal of a signer from the multisig,Nemanja Radenkovic,"November 3, 2021",MultiSig,Blockchain
MARKET_ADD_BALANCE_001,Market Add Balance,Adds funds to the market actor,Nemanja Radenkovic,"November 3, 2021",Market,Market
MARKET_GET_RESERVED_001,Market Get Reserved,Gets the amount of funds that are currently reserved for the address,Nemanja Radenkovic,"November 3, 2021",Market,Market
MARKET_RESERVE_FUNDS_001,Market Reserve Funds,Reserves funds for a deal,Nemanja Radenkovic,"November 3, 2021",Market,Market
MARKET_RELEASE_FUNDS_001,Market Release Funds,Releases reserved funds,Nemanja Radenkovic,"November 3, 2021",Market,Market
IdNotSnakeCase,Market Withdraw,Withdraws unlocked funds from the market actor,Nemanja Radenkovic,"November 3, 2021",Market,Market
PAYMENT_CHANNEL_GET_001,Payment Channel Get,Gets channel information. It takes from and to addresses and amount,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_WAIT_READY_001,Payment Channel Wait Ready,waits until the create channel / add funds message with the given message CID arrives,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_AVAILABLE_FUNDS_001,Payment Channel Available Funds,"Gets the total available funds currently in the channel, given the address",Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_AVAILABLE_FUNDS_FROM_TO_001,Payment Channel Available Funds,"Gets the total available funds in the channel, given the address from and address to",Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_AVAILABLE_FUNDS_FROM_TO_001,Payment Channel Available Funds,If there is no active channel between from / to we still want to return an empty result object,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_LIST_001,Payment Channel List,List channels with given address,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_VOUCHER_001,Payment Channel Voucher Valid,Checks if vaucher is valid in case when voucher amount < balance,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_VOUCHER_002,Payment Channel Voucher Valid,Checks if vaucher is valid and fails when funds are too low,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_VOUCHER_003,Payment Channel Voucher Valid,Checks if vaucher is valid and fails when signature is invalid,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_VOUCHER_004,Payment Channel Voucher Valid,Checks if vaucher is valid and fails when signed by channel To account (instead of From account),Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_VOUCHER_005,Payment Channel Voucher Valid,Checks if vaucher is valid and fails when nonce is too low,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_VOUCHER_006,Payment Channel Voucher Valid,Checks if vaucher is valid and passes when nonce is higher,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_VOUCHER_007,Payment Channel Voucher Valid,Checks if vaucher is valid and passes when nonce for is different lane,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_VOUCHER_008,Payment Channel Voucher Valid,Checks if vaucher is valid and fails when voucher has higher nonce but lower value than lane state,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_VOUCHER_009,Payment Channel Voucher Valid,Checks if vaucher is valid and passes when voucher total redeemed <= balance,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
PAYMENT_CHANNEL_VOUCHER_010,Payment Channel Voucher Valid,Checks if vaucher is valid and fails when voucher total redeemed > balance,Nemanja Radenkovic,"November 3, 2021",Payment Channels,Token
,,,Nemanja Radenkovic,"November 3, 2021",,
,,,Nemanja Radenkovic,"November 3, 2021",,