systems:    

  Repository:
    subsystems:
      File Store:
        features:
          - name: Create UnixFS Filestore
            behaviors:
              - id: CLIENT_FS_001
                description: Takes a standard file whose path is src, forms a UnixFS DAG, and
                  writes a CARv2 file with positional mapping
          - name: CARv2 to Normal File
            behaviors:
              - id: CLIENT_FS_002
                description: Opens the CAR in the specified path as as a read-only blockstore,
                  and fronts it with a Filestore whose positional mappings are
                  stored inside the CAR itself.
          - name: Create a File
            behaviors:
              - id: CLIENT_FS_003
                description: Create file and return file name
          - name: Generate input file
            behaviors:
              - id: CLIENT_FS_004
                description: Generate input file
      Node:
        features:
          - name: Read Empty File
            behaviors:
              - id: NODE_CONFIG_001
                description: Config from empty file should be the same as default
          - name: Read Non-existent File
            behaviors:
              - id: NODE_CONFIG_002
                description: Config from not exisiting file should be the same as default
          - name: Default Full Node Config
            behaviors:
              - id: NODE_CONFIG_003
                description: Write config based on default full node
          - name: Default Miner Node Config
            behaviors:
              - id: NODE_CONFIG_004
                description: Write config based on default miner node
          - name: Shutdown Handler
            behaviors:
              - id: NODE_SHUTDOWN_001
                description: Create shutdown handler
          - name: Shutdown Monitor
            behaviors:
              - id: NODE_SHUTDOWN_002
                description: Manages shutdown requests, by watching signals and invoking the
                  supplied handlers in order.
          - name: Median Gas
            behaviors:
              - id: REPO_GAS_001
                description: Finds 55th percentile instead of median to put negative pressure on
                  gas price
          - name: Node Lock
            behaviors:
              - id: REPO_MUT_001
                description: Node should be able to lock once
          - name: Node Already Locked
            behaviors:
              - id: REPO_MUT_002
                description: Already locked nodes should return errors
          - name: Node Unlock
            behaviors:
              - id: REPO_MUT_003
                description: Node should be able to unlock
      Common:
        features:
          - name: Filesystem Based Repo
            behaviors:
              - id: REPO_FS_001
                description: Creates a repository instance based on a path on file system
          - name: Filesystem Repo Initialization
            behaviors:
              - id: REPO_FS_002
                description: Initializes Filesystem based repository
          - name: Memory Based Repo
            behaviors:
              - id: REPO_MEM_001
                description: " Creates new memory based repository with provided options"
      Key Store:
        features:
          - name: Create KeyStore Object
            behaviors:
              - id: REPO_KEYSTR_001
                description: Should be able to create KeyStore object
          - name: List Keys
            behaviors:
              - id: REPO_KEYSTR_002
                description: Should be able to list keys from KeyStore
          - name: Insert Key
            behaviors:
              - id: REPO_KEYSTR_003
                description: Inserts key/value pair into KeyStore
          - name: Key Conflict
            behaviors:
              - id: REPO_KEYSTR_004
                description: Inserting Key that already exists should error out
          - name: Delete Key
            behaviors:
              - id: REPO_KEYSTR_006
                description: Deletes the record from KeyStore given the Key as argument
      Network:
        features:
          - name: Api Endpoint
            behaviors:
              - id: REPO_NET_001
                description: Api endpoint should return multiaddress for communication with
                  Lotus API
          - name: Set Api Endpoint
            behaviors:
              - id: REPO_NET_002
                description: Set the endpoint of the current API so it can be read by API
                  clients
          - name: Api Endpoint with closed repo
            behaviors:
              - id: REPO_NET_003
                description: When node closes, multiaddress should be null
  Virtual Machine:
    subsystems:
      Common:
        features:
          - name: Gas Estimate Cap
            behaviors:
              - id: GAS_ESTIMATE_CAP_001
                description: Given a Message and a known Tipset key, return an estimated gas fee
                  cap for the specified message
          - name: Gas Estimate Limit
            behaviors:
              - id: GAS_ESTIMATE_LIMIT_001
                description: Given a Message and a known Tipset key, return the estimated gas
                  limit for the specified message
              - id: GAS_ESTIMATE_LIMIT_002
                description: Fails if given message fails to execute
          - name: Gas Estimate Premium
            behaviors:
              - id: GAS_ESTIMATE_PREMIUM_001
                description: Given a number of epochs nblocksincl, estimate what gas price
                  should be used for a message to have high likelihood of
                  inclusion in specified number of epochs
      Runtime:
        features:
          - name: Message Call
            behaviors:
              - id: MSG_CALL_001
                description: Succeeds if message struct does not differ in method in an actor's
                  function table
              - id: MSG_CALL_002
                description: "Succeeds if a regular (unsigned) message performs a full round
                  trip (marshal -> unmarshal) "
              - id: MSG_CALL_003
                description: Succeeds if a signed message performs a full round trip (marshal ->
                  unmarshal)
          - name: Message Serialize
            behaviors:
              - id: SERIALIZE_MSG_001
                description: Succeeds if a message's byte serialization does not fail
          - name: Message Serialization
            behaviors:
              - id: SIGNED_MSG_001
                description: Succeeds if JSON marshal and unmarshal succeeds
  Miner:
    subsystems:
      Mining:
        features:
          - name: Miner Create Block
            behaviors:
              - id: MINER_CREATE_BLOCK_001
                description: Given a block template, create a new block and return a full block
                  message signed by the local (miner) node
          - name: Miner Run
            behaviors:
              - id: MINER_RUN_001
                description: Start mining using GPU
              - id: MINER_RUN_002
                description: Given that GPU proving is disabled, start mining without the GPU
          - name: Miner Stop
            behaviors:
              - id: MINER_STOP_001
                description: Stop a running miner
      Common:
        features:
          - name: Miner Get Base Info
            behaviors:
              - id: MINER_GET_BASE_INFO_001
                description: "Given a miner address return the miner power, network power,
                  sectors, worker key, sector size, beacon entries and if the
                  miner is eligible for mining "
          - name: Miner Initialization
            behaviors:
              - id: MINER_INIT_001
                description: Given miner and worker keys, sector size, initialize the miner
                  repository on the local file system
              - id: MINER_INIT_002
                description: Fails if it can't connect to the full node API
              - id: MINER_INIT_003
                description: Fails if the full node API doesn't support API v1
              - id: MINER_INIT_004
                description: Fails if the miner repo was already initialized
              - id: MINER_INIT_005
                description: Given some metadata about presealed sectors, initialize the repo as
                  a genesis miner
          - name: Actor Address
            behaviors:
              - id: ACTOR_ADDRESS_001
                description: Return the actor address for the given miner
      Sectors:
        features:
          - name: Miner Sector Status
            behaviors:
              - id: MINER_SECTOR_STATUS_001
                description: Given a sector number, return the information about the sector
                  specified
          - name: Sector Add Piece to any
            behaviors:
              - id: SECTOR_ADD_PIECE_TO_ANY_001
                description: Given a piece, add it to an open sector. If no sectors with enough
                  space are open, create a new sector
              - id: SECTOR_ADD_PIECE_TO_ANY_002
                description: If a new sector can't be created, wait until more space is
                  available
          - name: Miner Sector List
            behaviors:
              - id: MINER_SECTOR_LIST_001
                description: Return a list of all pledged sectors
          - name: Miner Sectors Summary
            behaviors:
              - id: MINER_SECTORS_SUMMARY
                description: Return summary info of all pledged sectors, grouped by state
          - name: Sectors List in States
            behaviors:
              - id: SECTORS_LIST_IN_STATES_001
                description: Given a list of sector states, return all pledged sectors in
                  specified states
          - name: Sector Start Sealing
            behaviors:
              - id: SECTOR_START_SEALING_001
                description: Given a number of a sector that is either in Empty or WaitDeals
                  state, trigger sealing early
          - name: Sector Set Seal Delay
            behaviors:
              - id: SECTOR_SET_SEAL_DELAY_001
                description: Given a duration, set the time that a newly-created sector waits
                  for more deals before it starts sealing
          - name: Sector Get Seal Delay
            behaviors:
              - id: SECTOR_GET_SEAL_DELAY_002
                description: Return the time that a newly-created sector waits for more deals
                  before it starts sealing
          - name: Sector Set Expected Seal Duration
            behaviors:
              - id: SECTOR_SET_EXPECTED_SEAL_DURATION_001
                description: Given a duration, set the expected time for a sector to seal
          - name: Sector Get Expected Seal Duration
            behaviors:
              - id: SECTOR_GET_EXPECTED_SEAL_DURATION_001
                description: Return the expected time for a sector to seal
          - name: Sector Remove
            behaviors:
              - id: SECTOR_REMOVE_001
                description: Given a sector number, remove the sector from storage, without
                  terminating it on chain
          - name: Sector Terminate
            behaviors:
              - id: SECTOR_TERMINATE_001
                description: Given a sector number, terminate the sector on-chain (add it to a
                  termination batch first), then remove it from storage
          - name: Sector Terminate Pending
            behaviors:
              - id: SECTOR_TERMINATE_PENDING_001
                description: Return a list of sectors pending to be terminated
          - name: Sector CC Upgrade
            behaviors:
              - id: SECTOR_CC_UPGRADE_001
                description: Given a number of a committed capacity sector, mark the specified
                  sector for upgrade. When the next (adequate) regular sector is ProveCommited, terminate the old sector without fees.
              - id: SECTOR_CC_UPGRADE_002
                description: Given a sector that has deals in it, throw an error
              - id: SECTOR_CC_UPGRADE_003
                description: Given a sector that is already marked for upgrade, throw an error
              - id: SECTOR_CC_UPGRADE_004
                description: Given a sector that is not in the "Proving" state, throw an error
              - id: SECTOR_CC_UPGRADE_005
                description: Given a sector is faulty or declared faulted, throw an error
              - id: SECTOR_CC_UPGRADE_006
                description: Don't upgrade if the new sector is not the same size as the CC sector
              - id: SECTOR_CC_UPGRADE_007
                description: Don't upgrade if the new sector's expiry is sooner than the CC sector expiry
              - id: SECTOR_CC_UPGRADE_008
                description: Don't upgrade if the new sector's pledge is < than the CC sector pledge

          - name: Sector Pre Commit Flush
            behaviors:
              - id: SECTOR_PRE_COMMIT_FLUSH_001
                description: Immediately sends a PreCommit message with sectors batched for
                  PreCommit. Returns null if message wasn't sent
          - name: Sector Pre Commit Pending
            behaviors:
              - id: SECTOR_PRE_COMMIT_PENDING_001
                description: Return a list of pending PreCommit sectors to be sent in the next
                  batch message
          - name: Sector Commit Flush
            behaviors:
              - id: SECTOR_COMMIT_FLUSH_001
                description: Immediately sends a Commit message with sectors aggregated for
                  Commit. Returns null if message wasn't sent
          - name: Sector Commit Pending
            behaviors:
              - id: SECTOR_COMMIT_PENDING_001
                description: Returns a list of pending Commit sectors to be sent in the next
                  aggregate message
      Workers:
        features:
          - name: Worker Connect
            behaviors:
              - id: WORKER_CONNECT_001
                description: Connects to all workers RPC
          - name: Worker Stats
            behaviors:
              - id: WORKER_STATS_001
                description: Returns information for worker nodes, grouped by worker ID
          - name: Worker Jobs
            behaviors:
              - id: WORKER_JOBS_001
                description: Return information about active worker jobs, grouped by worker ID
      Storage:
        features:
          - name: Storage Attach
            behaviors:
              - id: STORAGE_ATTACH_001
                description: Given information about external storage, attach it to the local
                  storage index
          - name: Storage Info
            behaviors:
              - id: STORAGE_INFO_001
                description: Given a store ID, return information about attached storage
          - name: Storage Report Health
            behaviors:
              - id: STORAGE_REPORT_HEALTH_001
                description: Given an attached storage ID, return a health report for the
                  specified store
          - name: Storage Declare Sector
            behaviors:
              - id: STORAGE_DECLARE_SECTOR_001
                description: Given an attached storage ID and a sector number, create a sector
                  in the specified store
          - name: Storage Drop Sector
            behaviors:
              - id: STORAGE_DROP_SECTOR_001
                description: Given an attached storage ID and a sector number, delete a sector
                  from the specified store
          - name: Storage Find Sector
            behaviors:
              - id: STORAGE_FIND_SECTOR_001
                description: Given a sector number, return the attached storage ID where the
                  sector is located
          - name: Storage Best Allocate
            behaviors:
              - id: STORAGE_BEST_ALLOC_001
                description: Given a sector type and size, return the list of best (optimal)
                  attached stores for specified sector sorted by available space
          - name: Storage Stat
            behaviors:
              - id: STORAGE_STAT_001
                description: Given an attached storage ID, return statistics (capacity,
                  available, reserved,...) about the specified store
      Storage Deals:
        features:
          - name: Miner Import Deal Data
            behaviors:
              - id: MINER_IMPORT_DEAL_DATA_001
                description: Given a file path, import data about the deal stored in the
                  specified file
  
  Market:
    subsystems:
      Market:
        features:
          - name: Market Add Balance
            behaviors:
              - id: MARKET_ADD_BALANCE_001
                description: Adds funds to the market actor
          - name: Market Get Reserved
            behaviors:
              - id: MARKET_GET_RESERVED_001
                description: Gets the amount of funds that are currently reserved for the
                  address
          - name: Market Reserve Funds
            behaviors:
              - id: MARKET_RESERVE_FUNDS_001
                description: Reserves funds for a deal
          - name: Market Release Funds
            behaviors:
              - id: MARKET_RELEASE_FUNDS_001
                description: Releases reserved funds
          - name: Market Withdraw
            behaviors:
              - id: IdNotSnakeCase
                description: Withdraws unlocked funds from the market actor
