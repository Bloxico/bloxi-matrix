systems:    

  Miner:
    subsystems:
      Mining:
        features:
          - name: Miner Create Block
            behaviors:
              - id: MINER_CREATE_BLOCK_001
                description: Given a block template, create a new block and return a full block
                  message signed by the local (miner) node
          - name: Miner Run
            behaviors:
              - id: MINER_RUN_001
                description: Start mining using GPU
              - id: MINER_RUN_002
                description: Given that GPU proving is disabled, start mining without the GPU
          - name: Miner Stop
            behaviors:
              - id: MINER_STOP_001
                description: Stop a running miner
      Common:
        features:
          - name: Miner Get Base Info
            behaviors:
              - id: MINER_GET_BASE_INFO_001
                description: "Given a miner address return the miner power, network power,
                  sectors, worker key, sector size, beacon entries and if the
                  miner is eligible for mining "
          - name: Miner Initialization
            behaviors:
              - id: MINER_INIT_001
                description: Given miner and worker keys, sector size, initialize the miner
                  repository on the local file system
              - id: MINER_INIT_002
                description: Fails if it can't connect to the full node API
              - id: MINER_INIT_003
                description: Fails if the full node API doesn't support API v1
              - id: MINER_INIT_004
                description: Fails if the miner repo was already initialized
              - id: MINER_INIT_005
                description: Given some metadata about presealed sectors, initialize the repo as
                  a genesis miner
          - name: Actor Address
            behaviors:
              - id: ACTOR_ADDRESS_001
                description: Return the actor address for the given miner
      Sectors:
        features:
          - name: Miner Sector Status
            behaviors:
              - id: MINER_SECTOR_STATUS_001
                description: Given a sector number, return the information about the sector
                  specified
          - name: Sector Add Piece to any
            behaviors:
              - id: SECTOR_ADD_PIECE_TO_ANY_001
                description: Given a piece, add it to an open sector. If no sectors with enough
                  space are open, create a new sector
              - id: SECTOR_ADD_PIECE_TO_ANY_002
                description: If a new sector can't be created, wait until more space is
                  available
          - name: Miner Sector List
            behaviors:
              - id: MINER_SECTOR_LIST_001
                description: Return a list of all pledged sectors
          - name: Miner Sectors Summary
            behaviors:
              - id: MINER_SECTORS_SUMMARY
                description: Return summary info of all pledged sectors, grouped by state
          - name: Sectors List in States
            behaviors:
              - id: SECTORS_LIST_IN_STATES_001
                description: Given a list of sector states, return all pledged sectors in
                  specified states
          - name: Sector Start Sealing
            behaviors:
              - id: SECTOR_START_SEALING_001
                description: Given a number of a sector that is either in Empty or WaitDeals
                  state, trigger sealing early
          - name: Sector Set Seal Delay
            behaviors:
              - id: SECTOR_SET_SEAL_DELAY_001
                description: Given a duration, set the time that a newly-created sector waits
                  for more deals before it starts sealing
          - name: Sector Get Seal Delay
            behaviors:
              - id: SECTOR_GET_SEAL_DELAY_002
                description: Return the time that a newly-created sector waits for more deals
                  before it starts sealing
          - name: Sector Set Expected Seal Duration
            behaviors:
              - id: SECTOR_SET_EXPECTED_SEAL_DURATION_001
                description: Given a duration, set the expected time for a sector to seal
          - name: Sector Get Expected Seal Duration
            behaviors:
              - id: SECTOR_GET_EXPECTED_SEAL_DURATION_001
                description: Return the expected time for a sector to seal
          - name: Sector Remove
            behaviors:
              - id: SECTOR_REMOVE_001
                description: Given a sector number, remove the sector from storage, without
                  terminating it on chain
          - name: Sector Terminate
            behaviors:
              - id: SECTOR_TERMINATE_001
                description: Given a sector number, terminate the sector on-chain (add it to a
                  termination batch first), then remove it from storage
          - name: Sector Terminate Pending
            behaviors:
              - id: SECTOR_TERMINATE_PENDING_001
                description: Return a list of sectors pending to be terminated
          - name: Sector CC Upgrade
            behaviors:
              - id: SECTOR_CC_UPGRADE_001
                description: Given a number of a committed capacity sector, mark the specified
                  sector for upgrade. When the next (adequate) regular sector is ProveCommited, terminate the old sector without fees.
              - id: SECTOR_CC_UPGRADE_002
                description: Given a sector that has deals in it, throw an error
              - id: SECTOR_CC_UPGRADE_003
                description: Given a sector that is already marked for upgrade, throw an error
              - id: SECTOR_CC_UPGRADE_004
                description: Given a sector that is not in the "Proving" state, throw an error
              - id: SECTOR_CC_UPGRADE_005
                description: Given a sector is faulty or declared faulted, throw an error
              - id: SECTOR_CC_UPGRADE_006
                description: Don't upgrade if the new sector is not the same size as the CC sector
              - id: SECTOR_CC_UPGRADE_007
                description: Don't upgrade if the new sector's expiry is sooner than the CC sector expiry
              - id: SECTOR_CC_UPGRADE_008
                description: Don't upgrade if the new sector's pledge is < than the CC sector pledge

          - name: Sector Pre Commit Flush
            behaviors:
              - id: SECTOR_PRE_COMMIT_FLUSH_001
                description: Immediately sends a PreCommit message with sectors batched for
                  PreCommit. Returns null if message wasn't sent
          - name: Sector Pre Commit Pending
            behaviors:
              - id: SECTOR_PRE_COMMIT_PENDING_001
                description: Return a list of pending PreCommit sectors to be sent in the next
                  batch message
          - name: Sector Commit Flush
            behaviors:
              - id: SECTOR_COMMIT_FLUSH_001
                description: Immediately sends a Commit message with sectors aggregated for
                  Commit. Returns null if message wasn't sent
          - name: Sector Commit Pending
            behaviors:
              - id: SECTOR_COMMIT_PENDING_001
                description: Returns a list of pending Commit sectors to be sent in the next
                  aggregate message
      Workers:
        features:
          - name: Worker Connect
            behaviors:
              - id: WORKER_CONNECT_001
                description: Connects to all workers RPC
          - name: Worker Stats
            behaviors:
              - id: WORKER_STATS_001
                description: Returns information for worker nodes, grouped by worker ID
          - name: Worker Jobs
            behaviors:
              - id: WORKER_JOBS_001
                description: Return information about active worker jobs, grouped by worker ID
      Storage:
        features:
          - name: Storage Attach
            behaviors:
              - id: STORAGE_ATTACH_001
                description: Given information about external storage, attach it to the local
                  storage index
          - name: Storage Info
            behaviors:
              - id: STORAGE_INFO_001
                description: Given a store ID, return information about attached storage
          - name: Storage Report Health
            behaviors:
              - id: STORAGE_REPORT_HEALTH_001
                description: Given an attached storage ID, return a health report for the
                  specified store
          - name: Storage Declare Sector
            behaviors:
              - id: STORAGE_DECLARE_SECTOR_001
                description: Given an attached storage ID and a sector number, create a sector
                  in the specified store
          - name: Storage Drop Sector
            behaviors:
              - id: STORAGE_DROP_SECTOR_001
                description: Given an attached storage ID and a sector number, delete a sector
                  from the specified store
          - name: Storage Find Sector
            behaviors:
              - id: STORAGE_FIND_SECTOR_001
                description: Given a sector number, return the attached storage ID where the
                  sector is located
          - name: Storage Best Allocate
            behaviors:
              - id: STORAGE_BEST_ALLOC_001
                description: Given a sector type and size, return the list of best (optimal)
                  attached stores for specified sector sorted by available space
          - name: Storage Stat
            behaviors:
              - id: STORAGE_STAT_001
                description: Given an attached storage ID, return statistics (capacity,
                  available, reserved,...) about the specified store
      Storage Deals:
        features:
          - name: Miner Import Deal Data
            behaviors:
              - id: MINER_IMPORT_DEAL_DATA_001
                description: Given a file path, import data about the deal stored in the
                  specified file


