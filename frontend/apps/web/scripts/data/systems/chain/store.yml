system: Chain
subsystem: Store
features:
  - name: Close
    behaviors:
      - id: CHAIN_STORE_CLOSE_001
        description: Closes the chain store
  
  - name: Import
    behaviors:
      - id: CHAIN_STORE_IMPORT_001
        description: |
          Given a context 'ctx', and a reader 'r',
          import the state and chain objects from the reader, and return the tipset
  
  - name: Export
    behaviors:
      - id: CHAIN_STORE_EXPORT_001
        description: |
          Given a context 'ctx', a tipset 'ts', a chain epoch 'inclRecentRoots', flag indicating
          whether to skip older messages 'skipOldMsgs', and a writer 'w',
          Export the chain store state to the writer
  
  - name: Load
    behaviors:
      - id: CHAIN_STORE_LOAD_001
        description: |  
          Given a context 'ctx', loads the chain store
  
  - name: Sub head changes
    behaviors:
      - id: CHAIN_STORE_SUB_HEAD_CHANGES_001
        description: |  
          Given a context 'ctx',
          Return a channel which returns a list of head changes
          (Note: not to be confused with CHAIN_STORE_SUBSCRIBE_TO_HEAD_CHANGES_001)
  
  - name: Subscribe to head changes
    behaviors:
      - id: CHAIN_STORE_SUBSCRIBE_TO_HEAD_CHANGES_001
        description: |  
          Given a callback 'f', subscribe 'f' to head change events
          (Note: not to be confused with CHAIN_STORE_SUB_HEAD_CHANGES_001)
  
  - name: Is block validated
    behaviors:
      - id: CHAIN_STORE_IS_BLOCK_VALID_001
        description: |  
          Given a context 'ctx', a block CID 'blkid',
          return true if block is validated
  
  - name: Mark block validated
    behaviors:
      - id: CHAIN_STORE_MARK_BLOCK_VALID_001
        description: |  
          Given a context 'ctx', a block CID 'blkid',
          mark the block as validated
  
  - name: Unmark block validated
    behaviors:
      - id: CHAIN_STORE_UNMARK_BLOCK_VALID_001
        description: |  
          Given a context 'ctx', a block CID 'blkid',
          unmark the block as validated
  
  - name: Set genesis block
    behaviors:
      - id: CHAIN_STORE_SET_GENESIS_BLOCK_001
        description: |  
          Given a context 'ctx', a block header 'b',
          set b as the genesis block
  
  - name: Get genesis block
    behaviors:
      - id: CHAIN_STORE_GET_GENESIS_001
        description: |  
          Given a context 'ctx', return the genesis block
  
  - name: Put tipset
    behaviors:
      - id: CHAIN_STORE_PUT_TIPSET_001
        description: |  
          Given a context 'ctx', a tipset 'ts',
          add the tipset to the chain store
  
  - name: Maybe take heavier tipset
    behaviors:
      - id: CHAIN_STORE_MAYBE_TAKE_HEAVIER_TIPSET_001
        description: |  
          Given a context 'ctx', a tipset 'ts',
          evaluate the tipset and lock it as the head, if and only if it is heavier
          than the current head and does not exceed maximum fork length
  
  - name: Flush validation cache
    behaviors:
      - id: CHAIN_STORE_FLUSH_VALIDATION_CACHE_001
        description: |  
          Given a context 'ctx', a batching datastore 'ds',
          remove all results of block validation from the chain store
  
  - name: Set head
    behaviors:
      - id: CHAIN_STORE_SET_HEAD_001
        description: |
          Given a context 'ctx', a tipset 'ts',
          set the chain store's current 'best' head node
  
  - name: Remove checkpoint
    behaviors:
      - id: CHAIN_STORE_REMOVE_CHECKPOINT_001
        description: |  
          Given a context 'ctx', remove the current checkpoint
  
  - name: Set checkpoint
    behaviors:
      - id: CHAIN_STORE_SET_CHECKPOINT_001
        description: |  
          Given a context 'ctx', a tipset 'ts', set a checkpoint past which
          the chain store will not allow forks
  
  - name: Get checkpoint
    behaviors:
      - id: CHAIN_STORE_GET_CHECKPOINT_001
        description: |  
          Return the latest checkpoint from the chain store
  
  - name: Contains
    behaviors:
      - id: CHAIN_STORE_CONTAINS_001
        description: |  
          Given a context 'ctx', a tipset 'ts',
          return true if the used block store has all blocks in the tipset
  
  - name: Get block
    behaviors:
      - id: CHAIN_STORE_GET_BLOCK_001
        description: |  
          Given a context 'ctx', and block CID 'c',
          return a block header with the supplied CID
      - id: CHAIN_STORE_GET_BLOCK_002
        description: |  
          If the block is not found in the block store, return an error
  
  - name: Load tipset
    behaviors:
      - id: CHAIN_STORE_LOAD_TIPSET_001
        description: |  
          Given a context 'ctx', and tipset 'tsk',
          load the tipset into the chain store
  
  - name: Is ancestor
    behaviors:
      - id: CHAIN_STORE_IS_ANCESTOR_001
        description: |  
          Given a context 'ctx', and tipsets 'a' and 'b',
          Return true if 'a' is ancestor of 'b'
  
  - name: Nearest common ancestor
    behaviors:
      - id: CHAIN_STORE_NEAREST_COMMON_ANCESTOR_001
        description: |  
          Given a context 'ctx', and tipsets 'a' and 'b',
          return the nearest common ancestor tipset of 'a' and 'b'
  
  - name: Reorg ops
    behaviors:
      - id: CHAIN_STORE_REORG_OPS_001
        description: |  
          Given a context 'ctx', and tipsets 'a' and 'b',
          return the chain segments that for from the nearest common
          ancestor of both tipsets
  
  - name: Get heaviest tipset
    behaviors:
      - id: CHAIN_STORE_GET_HEAVIEST_TIPSET_001
        description: |  
          Return the current known heaviest tipset (i.e. the head)
  
  - name:  Add to tipset tracker
    behaviors:
      - id: CHAIN_STORE_ADD_TO_TIPSET_TRACKER_001
        description: |  
          Given a context 'ctx', and block header 'b',
          add the block to the tipset tracker
  
  - name: Persist block headers
    behaviors:
      - id: CHAIN_STORE_PERSIST_HEADERS_001
        description: |  
          Given a context 'ctx', and list of block headers 'b',
          persist all block headers to the chain store
  
  - name: Add block
    behaviors:
      - id: CHAIN_STORE_ADD_BLOCK_001
        description: |  
          Given a context 'ctx', and block header 'b',
          persist the single block to the chain store
  
  - name: Get path
    behaviors:
      - id: CHAIN_STORE_GET_PATH_001
        description: |  
          Given a context 'ctx', and tipset keys 'from' and 'to',
          return a sequence of atomic head change operations that need to be 
          applied in order to switch the head of the chain from the 'from' tipset
          to the 'to' tipset.
  
  - name: Try fill tipset
    behaviors:
      - id: CHAIN_STORE_TRY_FILL_TIPSET_001
        description: |  
          Given a context 'ctx', and a tipset 'ts',
          create a new tipset, fill it with messages and block headers from 'ts' and return it
      - id: CHAIN_STORE_TRY_FILL_TIPSET_002
        description: |  
          If an error occurs durring tipset filling, return an error
  
  - name: Get tipset by height
    behaviors:
      - id: CHAIN_STORE_GET_TIPSET_BY_HEIGHT_001
        description: |  
          Given a context 'ctx', chain epoch 'h', tipset 'ts', and prev retrieval flag 'prev',
          return the tipset on the chain behind 'ts' at the given height
      - id: CHAIN_STORE_GET_TIPSET_BY_HEIGHT_002
        description: |  
          Given that the given heigh is a null round, and 'prev' is true, return the tipset
          before the null round
      - id: CHAIN_STORE_GET_TIPSET_BY_HEIGHT_003
        description: |  
          Given that the given heigh is a null round, and 'prev' is false, return the tipset
          following the null round
  
  - name: Get tipset from key
    behaviors:
      - id: CHAIN_STORE_GET_TIPSET_FROM_KEY_001
        description: |  
          Given a context 'ctx', and a tipset key 'tsk',
          return the tipset indicated by the key
      - id: CHAIN_STORE_GET_TIPSET_FROM_KEY_002
        description: |  
          If the key is empty, return the heaviest tipset from the chain store
  
  - name: Get latest beacon entry
    behaviors:
      - id: CHAIN_STORE_GET_LATEST_BEACON_001
        description: |  
          Given a context 'ctx', and a tipset 'ts',
          return the latest beacon entry for the tipset
      - id: CHAIN_STORE_GET_LATEST_BEACON_002
        description: |  
          If an error occurs in finding the beacon entry, return an error
  
  - name: Compute next base fee
    behaviors:
      - id: CHAIN_STORE_COMPUTE_NEXT_BASE_FEE_001
        description: |  
          Given a base fee 'baseFee', amount of gas limit used 'gasLimitUsed', number of blocks 'noBlocks',
          and chain epoch 'epoch',
          calculate and return next base fee
  
  - name: Calculate base fee
    behaviors:
      - id: CHAIN_STORE_COMPUTE_BASE_FEE_001
        description: |  
          Given a context 'ctx', tipset 'ts', 
          calculate and return the base fee for the tipset